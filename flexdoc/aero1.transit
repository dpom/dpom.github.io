["^ ","~:project","Aero","~:ns-name","aero.core","~:var-name","read-config","~:examples",[["^ ","~:file-url","https://github.com/bzg/woof/blob/d0cb841d62391122ab232fd4c241c138726120c9/src/bzg/db.clj","~:repo","bzg/woof","~:example",["(ns bzg.db","  (:require [datalevin.core :as d]","            [bzg.config :as config]","            [aero.core :refer (read-config)]))","",";; Set up configuration","...","",";; Set up configuration","(def config (merge config/defaults (read-config \"config.edn\")))","",";; Set up the database"],"~:stars",60],["^ ","^4","https://github.com/onyx-platform/onyx-template/blob/950f4d92b70d1b313fac1b148048230ea551b13e/src/leiningen/new/onyx_app/test/onyx_app/jobs/basic_test.clj","^5","onyx-platform/onyx-template","^6",["(ns {{app-name}}.jobs.basic-test","    (:require [aero.core :refer [read-config]]","              [clojure.core.async :refer [>!! close!]]","              [clojure.java.io :as io]","...","(deftest basic-test","  (testing \"That we can have a basic in-out workflow run through Onyx\"","    (let [{:keys [env-config","                  peer-config]} (read-config (io/resource \"config.edn\"))","          job ({{app-name}}.jobs.basic/basic-job {:onyx/batch-size 10","                                                  :onyx/batch-timeout 1000})"],"^7",25],["^ ","^4","https://github.com/logseq/deprecated-github-backend/blob/7aa2f187f0f2d7b1e9c3f6a057bede939b4790b7/src/main/app/config.clj","^5","logseq/deprecated-github-backend","^6",["(ns app.config","  (:require [aero.core :refer (read-config)]","            [clojure.java.io :as io]))","","...","            [clojure.java.io :as io]))","","(def config (read-config (io/resource \"config.edn\")))","","(def production? (= \"production\" (:env config)))"],"^7",18],["^ ","^4","https://github.com/onyx-platform/onyx-twitter-sample/blob/bd206630a0ee083867f44e856544c6bd664962e8/test/twit/jobs/smoke_test.clj","^5","onyx-platform/onyx-twitter-sample","^6",["(ns twit.jobs.smoke-test","  (:require [aero.core :refer [read-config]]","            [clojure.core.async :refer [>!!]]","            [clojure.java.io :as io]","...","(deftest smoke-test","  (testing \"Test\"","    (let [{:keys [env-config","                  peer-config]} (read-config (io/resource \"config.edn\"))","          job (twit.jobs.smoke/smoketest-job {:onyx/batch-size 10","                                              :onyx/batch-timeout 1000})"],"^7",12],["^ ","^4","https://github.com/onyx-platform/onyx-twitter-sample/blob/bd206630a0ee083867f44e856544c6bd664962e8/test/twit/jobs/basic_test.clj","^5","onyx-platform/onyx-twitter-sample","^6",["(ns twit.jobs.basic-test","  (:require [aero.core :refer [read-config]]","            [clojure.core.async :refer [>!!]]","            [clojure.java.io :as io]","...","(deftest basic-test","  (testing \"That we can have a basic in-out workflow run through Onyx\"","    (let [{:keys [env-config","                  peer-config]} (read-config (io/resource \"config.edn\"))","          job (twit.jobs.basic/basic-job {:onyx/batch-size 10","                                          :onyx/batch-timeout 1000})"],"^7",12]]]